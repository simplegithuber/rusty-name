#include <stdio.h>  //   it's a low algotithm,it costs a lot of time
#include <time.h>
#include <stdlib.h>
#define M 10000
int MaxSubsequenceSum(int a[], int N);
int main()
{
	int ar[M], Max_sum;
	clock_t start, finish;
	start = clock();
	srand((unsigned)time(NULL));
	for (int k = 0; k < M; k++)
		ar[k] = rand() % (2 * M) - M;
	Max_sum = MaxSubsequenceSum(ar, M);
	finish = clock();
	printf("The sum of the largest subsequences is %d\n", Max_sum);
	printf("Program running time is %f\n", (double)(finish - start));   //  count the program running time  
	return 0;                                                           //    in my computer, it's about 83 ms.
}
int MaxSubsequenceSum(int a[], int N)
{
	int ThisSum, MaxSum, i, j;
	MaxSum = 0;
	for (i = 0; i < N; i++)
	{
		ThisSum = 0;
		for (j = i; j < N; j++)
		{
			ThisSum = a[j];
			if (ThisSum > MaxSum)
				MaxSum = ThisSum;
		}
	}
	return MaxSum;
}
